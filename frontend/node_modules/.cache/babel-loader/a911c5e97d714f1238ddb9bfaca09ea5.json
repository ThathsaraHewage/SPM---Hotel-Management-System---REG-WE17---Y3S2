{"ast":null,"code":"import { API } from \"../../backend\"; ///////////////////////add research paper call by the Researcher////////////////////\n\nexport const AddNewVenueType = (userId, token, product) => {\n  return fetch(`${API}/new-room-type/add/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; /////////// Display all room types in the table view //////////////////\n\n_c = AddNewVenueType;\nexport const getAllVenueTypes = () => {\n  return fetch(`${API}/room-types`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; /////////////delete a room type from the list///////////////////////\n\nexport const deleteVenueType = (productId, userId, token) => {\n  return fetch(`${API}/room/${productId}/${userId}`, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //not modified\n\nexport const getProduct = productId => {\n  return fetch(`${API}/room/${productId}`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateProduct = (productId, userId, token, product) => {\n  return fetch(`${API}/room/${productId}/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getAllApprovedsResearchPapers = () => {\n  return fetch(`${API}/approved/research-papers`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewVenueType\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/clone hotel/SPM-Hotel-Management-System_REG-WE17---Y3S2/frontend/src/admin/helper/userapicall.js"],"names":["API","AddNewVenueType","userId","token","product","fetch","method","headers","Accept","Authorization","body","then","response","json","catch","err","console","log","getAllVenueTypes","deleteVenueType","productId","getProduct","updateProduct","getAllApprovedsResearchPapers"],"mappings":"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","sourcesContent":["import { API } from \"../../backend\";\r\n\r\n///////////////////////add research paper call by the Researcher////////////////////\r\nexport const AddNewVenueType = (userId, token, product) => {\r\n  return fetch(`${API}/new-room-type/add/${userId}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: product,\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n/////////// Display all room types in the table view //////////////////\r\nexport const getAllVenueTypes = () => {\r\n  return fetch(`${API}/room-types`, {\r\n    method: \"GET\",\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n\r\n/////////////delete a room type from the list///////////////////////\r\nexport const deleteVenueType = (productId, userId, token) => {\r\n    return fetch(`${API}/room/${productId}/${userId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n\r\n\r\n//not modified\r\n\r\nexport const getProduct = productId => {\r\n    return fetch(`${API}/room/${productId}`, {\r\n      method: \"GET\"\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\nexport const updateProduct = (productId, userId, token, product) => {\r\n  return fetch(`${API}/room/${productId}/${userId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: `Bearer ${token}`\r\n    },\r\n    body: product\r\n  })\r\n    .then(response => {\r\n      return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\n\r\nexport const getAllApprovedsResearchPapers = () => {\r\n  return fetch(`${API}/approved/research-papers`, {\r\n    method: \"GET\",\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};"]},"metadata":{},"sourceType":"module"}